//Programa que resuelve las ecuaciones estacionarias para Navier-Stokes
//Ejemplo: Cavity Flow

//Malla

int n=20;

border a(t=0,1.0){x=t; y=0; label=1;};
border b(t=0,1.0){x=1; y=t; label=2;};
border d(t=1.0,0){x=t; y=1; label=3;};
border c(t=1.0,0){x=0; y=t; label=4;};
mesh Th = buildmesh (a(n) + b(n) + c(n) +d(n));

plot(Th, wait=1);


//Par치metros
real tol = 1.0E-8;
real nu = 0.1;
real eps = 1.0E-10;

//  Vh: Espacio de elemento finitos para la velocidad
fespace Vh ( Th, P2 );

//  Qh: Espacio de elemento finitos para la presi칩n
fespace Qh ( Th, P1 );

//Funciones
Vh u1, u1old, u2, u2old;
Qh p;

//Funciones Test
Vh v1, v2;
Qh q;

//Definicion del problema
problem NavierStokes([u1,u2,p], [v1,v2,q])
 =int2d(Th)(dx(u1)*dx(v1)+dy(u1)*dy(v1)+dx(u2)*dx(v2)+dy(u2)*dy(v2))
 +int2d(Th)(u1*dx(u1old)*v1+u2*dx(u1old)*v1+u1old*dx(u1)*v1+u2old*dy(u1)*v1+
            u1*dx(u2old)*v2+u2*dy(u2old)*v2+u1old*dx(u2)*v2+u2old*dy(u2)*v2)
 +int2d(Th)(dx(p)*v1+dy(p)*v2+dx(q)*u1+dy(q)*u2)
 -int2d(Th)(u1old*dx(u1old)*v1+u2old*dy(u1old)*v1+u1old*dx(u2old)*v2+u2old*dy(u2old)*v2)
 +on(1,2,3,4,u2=0.0)
 +on(1,2,4,u1=0.0)
 +on(3,u1=1.0);

//Inicializamos
u1=0.0;
u2=0.0;

//Resolvemos la ecuaci칩n no lineal usando punto fijo
real err = 0;
  for ( int i = 0; i < 10; i++ )
  {
    u1old = u1;
    u2old = u2;
    NavierStokes;
    err = sqrt(int2d(Th)(square(dx(u1)-dx(u1old))+square(dx(u2)-dx(u2old))));
    cout << "Iteracion: " << i << " - Error: " << err << endl;
    if(err < tol) break;
  }


//Graficamos la velocidad
plot ( [ u1, u2 ], wait=1 );

//Graficamos la presi칩n
plot(p);

